@model Dziennik_v0._1.Core.ViewModels.DietIndexViewModel

@{
    ViewBag.Title = "Index";
    var SnacksCount = 0;
    var BreakfestCount = 0;
    var DinnerCount = 0;
    var LunchCount = 0;
}

<h2>Odżywianie:</h2>

@Html.ActionLink("Profil", "UserProfile", "Diet", new { area = "" }, new { @class = "btn btn-info btn-lg" })

<h2 class="text-center">Twoje posiłki:</h2>

<div class="row">
    <div class="col-sm-2">
        @Html.ActionLink("<", "Index", "Diet", new { dateTime = @Model.DailyMenu.DailyMenuDate.AddDays(-1) }, new { @class = "btn btn-info" })
    </div>
    <div class="col-sm-8">
        <div>
            @Html.EditorFor(model => model.DailyMenu.DailyMenuDate,
            new { htmlAttributes = new { @class = "form-control center-block", @id = "datepicker", @readonly = true, @style= "font-size:20px; background-color:#b4aaca" } })
        </div>
    </div>
    <div class="col-sm-2 text-right">
        @Html.ActionLink(">", "Index", "Diet", new { dateTime = @Model.DailyMenu.DailyMenuDate.AddDays(1) }, new { @class = "btn btn-info" })
    </div>
</div>

<table class="table" style="margin-top:15px">
    <tr>
        <th>
            Nazwa:
        </th>

        <th>
            Kalorie:
        </th>

        <th>
            Białko:
        </th>

        <th>
            Tłuszcz:
        </th>

        <th>
            Węglowodany:
        </th>

        <th>
            Waga:
        </th>
    </tr>

    @if (BreakfestCount == 0)
    {
        <tr class="MealTableRow">
            <td>Sniadanie:</td>
            <td>@Model.Breakfast.Calories</td>
            <td>@Model.Breakfast.Protein</td>
            <td>@Model.Breakfast.Fat</td>
            <td>@Model.Breakfast.Carbohydrates</td>
            <td></td>
        </tr>
    }
    @foreach (var item in Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.breakfast))
    {

        BreakfestCount++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Calories)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Protein)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fat)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Carbohydrates)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
        </tr>
    }
    @if (BreakfestCount == Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.breakfast).Count())
    {
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>@Html.ActionLink("+", "AddFoodToMeal", "Diet", new { mealType = Dziennik_v0._1.Core.Models.Enums.MealType.breakfast, dateTime = @Model.DailyMenu.DailyMenuDate }, new { @class = "btn btn-primary btn-sm" })</td>
        </tr>
    }
    @if (LunchCount == 0)
    {
        <tr class="MealTableRow">
            <td>Obiad:</td>
            <td>@Model.Lunch.Calories</td>
            <td>@Model.Lunch.Protein</td>
            <td>@Model.Lunch.Fat</td>
            <td>@Model.Lunch.Carbohydrates</td>
            <td></td>
        </tr>
    }

    @foreach (var itemlunch in Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.lunch))
    {
        LunchCount++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Calories)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Protein)
            </td>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Fat)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Carbohydrates)
            </td>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Weight)
            </td>
        </tr>
    }
    @if (LunchCount == Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.lunch).Count())
    {
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>@Html.ActionLink("+", "AddFoodToMeal", "Diet", new { mealType = Dziennik_v0._1.Core.Models.Enums.MealType.lunch, dateTime = @Model.DailyMenu.DailyMenuDate }, new { @class = "btn btn-primary btn-sm" })</td>
        </tr>
    }

    @if (DinnerCount == 0)
    {
        <tr class="MealTableRow">
            <td>Kolacja:</td>
            <td>@Model.Dinner.Calories</td>
            <td>@Model.Dinner.Protein</td>
            <td>@Model.Dinner.Fat</td>
            <td>@Model.Dinner.Carbohydrates</td>
            <td></td>
        </tr>
    }

    @foreach (var itemlunch in Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.dinner))
    {
        DinnerCount++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Calories)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Protein)
            </td>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Fat)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Carbohydrates)
            </td>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Weight)
            </td>
        </tr>
    }
    @if (DinnerCount == Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.dinner).Count())
    {
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>@Html.ActionLink("+", "AddFoodToMeal", "Diet", new { mealType = Dziennik_v0._1.Core.Models.Enums.MealType.dinner, dateTime = @Model.DailyMenu.DailyMenuDate }, new { @class = "btn btn-primary btn-sm" })</td>
        </tr>
    }

    @if (SnacksCount == 0)
    {
        <tr class="MealTableRow">
            <td>Przekąski:</td>
            <td>@Model.Snack.Calories</td>
            <td>@Model.Snack.Protein</td>
            <td>@Model.Snack.Fat</td>
            <td>@Model.Snack.Carbohydrates</td>
            <td></td>
        </tr>
    }

    @foreach (var itemlunch in Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.snacks))
    {
        SnacksCount++;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Calories)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Protein)
            </td>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Fat)
            </td>

            <td>
                @Html.DisplayFor(modelItem => itemlunch.Carbohydrates)
            </td>
            <td>
                @Html.DisplayFor(modelItem => itemlunch.Weight)
            </td>
        </tr>
    }
    @if (SnacksCount == Model.DailyMenu.FoodModels.Where(f => f.MealType == Dziennik_v0._1.Core.Models.Enums.MealType.snacks).Count())
    {
        <tr>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>@Html.ActionLink("+", "AddFoodToMeal", "Diet", new { mealType = Dziennik_v0._1.Core.Models.Enums.MealType.snacks, dateTime = @Model.DailyMenu.DailyMenuDate }, new { @class = "btn btn-primary btn-sm" })</td>
        </tr>
    }
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")
    @Scripts.Render("~/Scripts/datepicker-pl.js")
    @Styles.Render("~/Content/themes/base/datepickercustom.css")

    <script>
        $(function () {
            $("#datepicker").datepicker({
                dateFormat: "yy.mm.dd",
                onSelect: function () {
                    window.location.href ='Diet?datetime=' + this.value;
                }
            });
        });
    </script>

}