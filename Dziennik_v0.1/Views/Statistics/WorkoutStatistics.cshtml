@model Dziennik_v0._1.Core.ViewModels.StatisticsViewModels.WorkoutStatisticsViewModel

@{
    ViewBag.Title = "WorkoutStatistics";
}


<h2>Statystyki treningu siłowego:</h2>

@if (Model.YearsWithTraning.Count() > 1)
{
    <h4>Wybierz rok:</h4>
    <div>
        @foreach (var item in Model.YearsWithTraning)
        {
            <button type="button" class="btn btn-primary" id="@item.ToString()"> @item.ToString()</button>
        }
    </div>
}

<figure class="highcharts-figure" style="margin-top:15px; margin-bottom:30px">
    <div id="container"></div>
</figure>

<button type="button" class="btn btn-primary" id="styczen"> styczen</button>

<div>
    <p>
        @Html.ActionLink("Powrót do ogólnych statystyk", "AnnualStatistics", null, new { @class = "btn btn-primary m-3" })
    </p>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/highchartjs")
    @Scripts.Render("~/bundles/highchartcss")
    <script>
        Highcharts.setOptions({
            chart: {
                style: {
                    fontFamily: 'Lato'
                },
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            $.ajax({
                url: "/Api/StatisticsApi/WorkoutVolumeSumaryList/",
                method: "GET"
            })
                .done(function (data) {
                    Highcharts.chart('container', {
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: 'Czas Treningów w @DateTime.Now.Year'
                        },
                        xAxis: {
                            categories: data.yearsWithTraning
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Ilość minut treningu'
                            },
                            stackLabels: {
                                enabled: true,
                                style: {
                                    fontWeight: 'bold',
                                    color: (
                                        Highcharts.defaultOptions.title.style &&
                                        Highcharts.defaultOptions.title.style.color
                                    ) || 'gray'
                                }
                            }
                        },
                        series: [{
                            name: 'Siłowy',
                            data: data.workoutVolume,
                            color: '#62c462',
                        }]
                    });
                })
                .fail(function () {
                    alert("Something failed!");
                });

                })
    </script>

    @if (Model.YearsWithTraning.Count() > 1)
    {
        foreach (var item in Model.YearsWithTraning)
        {
            <script>
                $("#@item.ToString()").click(function () {
            $.ajax({
                url: "/Api/StatisticsApi/WorkoutVolumePerYearList/" +@item.ToString() +"/"+ @DateTime.Now.Month,
                method: "GET"
            })
                .done(function (data) {
                    Highcharts.chart('container', {
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: 'Czas Treningów'
                        },
                        xAxis: {
                            type: "datetime",
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Ilość minut treningu'
                            },
                            stackLabels: {
                                enabled: true,
                                style: {
                                    fontWeight: 'bold',
                                    color: (
                                        Highcharts.defaultOptions.title.style &&
                                        Highcharts.defaultOptions.title.style.color
                                    ) || 'gray'
                                }
                            }
                        },
                        legend: {
                            align: 'right',
                            x: -30,
                            verticalAlign: 'top',
                            y: 25,
                            floating: true,
                            backgroundColor:
                                Highcharts.defaultOptions.legend.backgroundColor || 'white',
                            borderColor: '#CCC',
                            borderWidth: 1,
                            shadow: false
                        },
                        tooltip: {
                            headerFormat: '<b>{point.x}</b><br />',
                            pointFormat: '{series.name}: {point.y} min.<br />Łącznie: {point.stackTotal} min.'
                        },
                        plotOptions: {
                            column: {
                                stacking: 'normal',
                                dataLabels: {
                                    enabled: true
                                }
                            }
                        },
                        series: [{
                            name: 'Objetość',
                            data: data.workoutVolume,
                            color: '#62c462',
                            pointStart: Date.UTC(2020, 1, 1),
                            pointInterval: 24 * 3600 * 1000 // one day
                        }]
                    });
                })
                .fail(function () {
                    alert("Something failed!");
                });

                })
            </script>
        }
    }
}
