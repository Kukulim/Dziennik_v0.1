@model Dziennik_v0._1.Core.ViewModels.WorkoutCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Dodaj nowy trening:</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Workout.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Workout.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Workout.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Workout.LengthOfTraining, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Workout.LengthOfTraining, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Workout.LengthOfTraining, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.Label("Ilość Ćwiczeń:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 1; i < 13; i++)
                {
                    @Ajax.ActionLink(i.ToString(), "UpdateExerciseTable",
                   new { ExersisesCount = i },
                   new AjaxOptions
                      {
                          UpdateTargetId = "exerciseTable",
                          InsertionMode = InsertionMode.Replace,
                          HttpMethod = "POST"
                      },
                   new { @class = "btn btn-default wrokoutExerciseCountButton" })
                }
            </div>
        </div>
    </div>

    <div id="exerciseTable">
        @{ Html.RenderPartial("_ExerciseTable", Model); }
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 text-right">
            <input type="submit" value="Zapisz trening" class="btn btn-success " />
        </div>
        <div class="col-md-offset-2 col-md-10 text-right">
            @Html.ActionLink("Powrót do listy treningów", "Index", null, null, new { @class = "btn btn-primary" })
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy treningów", "Index", null, null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}