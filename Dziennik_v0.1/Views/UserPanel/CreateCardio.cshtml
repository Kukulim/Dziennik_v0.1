@using Dziennik_v0._1.Core.Models.Enums

@model Dziennik_v0._1.Core.ViewModels.CardioCreateViewModel

@{
    ViewBag.Title = "CreateCardio";
}

<h2>Dodaj nowy trening:</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Cardio.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cardio.Date,
            new { htmlAttributes = new { @class = "form-control", @id = "datepicker", @readonly = true } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Cardio.LengthOfTraining, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cardio.LengthOfTraining,
         new { htmlAttributes = new { @class = "form-control timepicker col-md-2" } })<div class="control-label col-md-2 spanpicker">min.</div>
        </div>
        <div class="col-md-6 text-center">
        @Html.ValidationMessageFor(model => model.Cardio.LengthOfTraining, "", new { @class = "text-danger text-center" })
    </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DistanceString, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DistanceString,
         new { htmlAttributes = new { @class = "form-control timepicker col-md-2" } })<div class="control-label col-md-2 spanpicker">km.</div>

        </div>
        <div class="col-md-6 text-center">
            @Html.ValidationMessageFor(model => model.DistanceString, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cardio.CardioType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Cardio.CardioType, new SelectList(Enum.GetValues(typeof(CardioType))),
             new { @class = "form-control", @id = "cardiodropdown", @style = "option:hover{background-color:yellow;}" })
                @Html.ValidationMessageFor(model => model.Cardio.CardioType, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 text-right">
            <input type="submit" value="Zapisz trening" id="js-submit" class="btn btn-success btn-lg" />
        </div>
    </div>
}

<div class="text-center">
    @Html.ActionLink("Powrót do listy treningów", "Index", null, null, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")
    @Scripts.Render("~/Scripts/datepicker-pl.js")
    @Styles.Render("~/Content/themes/base/datepickercustom.css")

    <script>
        $(document).ready(function () {
            $('#datepicker').datepicker($.datepicker.regional["pl"]);
        });
    </script>
    <script>
        $
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                changeMonth: true,
                changeYear: true
            });
        });
    </script>
}