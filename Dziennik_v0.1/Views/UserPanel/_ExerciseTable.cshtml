@model Dziennik_v0._1.Core.ViewModels.WorkoutCreateViewModel

<table class="table">

    <tr>
        <th>
            Nr:
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Exercises[0].Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Exercises[0].Series)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Exercises[0].Repetitions)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Exercises[0].Weight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Exercises[0].Volume)
        </th>
    </tr>
    @for (var i = 0; i < Model.Exercises.Count; i++)
    {

        <tr class="js-myRows">
            <td class="text-center">
                @(i+1)
            </td>
            <td>
                @Html.EditorFor(x => x.Exercises[i].Name,
                    new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Exercises[i].Name, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(x => x.Exercises[i].Series,
                    new { htmlAttributes = new { @class = "js-myform form-control " + "js-series-" + (i + 1) } })
                @Html.ValidationMessageFor(model => model.Exercises[i].Series, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(x => x.Exercises[i].Repetitions,
                    new { htmlAttributes = new { @class = "js-myform form-control " + "js-repeitions-" + (i + 1) } })
                @Html.ValidationMessageFor(model => model.Exercises[i].Repetitions, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(x => x.Exercises[i].Weight,
                    new { htmlAttributes = new { @class = "js-myform form-control " + "js-weight-" + (i + 1) } })
                @Html.ValidationMessageFor(model => model.Exercises[i].Weight, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(x => x.Exercises[i].Volume,
                    new { htmlAttributes = new { @class = "form-control " + "js-sum-" + (i + 1), @readonly = true } })
                @Html.ValidationMessageFor(model => model.Exercises[i].Volume, "", new { @class = "text-danger" })
            </td>
        </tr>

    }
</table>
@for (var k = 1; k < 13; k++)
{
    <script>
        $(document).ready(function () {
            $(".js-series-@k, .js-repeitions-@k, .js-weight-@k")
                .change(function () {
                    var sum = parseInt($(".js-series-@k").val()) * parseInt($(".js-repeitions-@k").val()) * parseInt($(".js-weight-@k").val());
                    var workoutVolume = 0;
                    $(".js-sum-@k").val(sum);
                    $('table .js-myRows').each(function () {
                        var lasttd = $(this).find(':last-child');
                        var number = parseInt(lasttd.find('input').val());
                        workoutVolume += number;
                    });
                    $(".workoutVolume").val(workoutVolume);
                })
            $(".workoutVolume").val(0);
        });
    </script>
}
